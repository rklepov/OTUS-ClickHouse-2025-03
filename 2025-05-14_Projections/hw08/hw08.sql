CREATE OR REPLACE TABLE sales
(
    `id` UInt32,
    `product_id` UInt32,
    `quantity` UInt32,
    `price` Float32,
    `sale_date` DateTime
)
ENGINE = MergeTree
ORDER BY (sale_date, product_id);

ALTER TABLE sales
    (ADD PROJECTION product_sales_projection
    (
        SELECT
            product_id,
            sum(quantity) AS total_quantity,
            sum(quantity * price) AS total_revenue,
            count() AS total_sales
        GROUP BY product_id
    ));

CREATE OR REPLACE TABLE sales_aggregated
(
    `product_id` UInt32,
    `total_quantity` AggregateFunction(sum, UInt32),
    `total_revenue` AggregateFunction(sum, Float64),
    `total_sales` AggregateFunction(count, UInt32)
)
ENGINE = AggregatingMergeTree
ORDER BY product_id;

DROP VIEW IF EXISTS sales_mv;

CREATE MATERIALIZED VIEW sales_mv TO sales_aggregated
AS SELECT
    product_id,
    sumState(quantity) AS total_quantity,
    sumState(quantity * price) AS total_revenue,
    countState() AS total_sales
FROM sales
GROUP BY product_id;

INSERT INTO sales (id, product_id, quantity, price, sale_date) VALUES
    (1, 101, 2, 15.99, '2023-01-15 10:30:00'),
    (2, 102, 1, 29.99, '2023-01-15 11:15:00'),
    (3, 103, 5, 9.99, '2023-01-16 09:45:00'),
    (4, 101, 3, 15.99, '2023-01-17 14:20:00'),
    (5, 104, 2, 49.99, '2023-01-18 16:30:00'),
    (6, 102, 1, 29.99, '2023-01-19 12:10:00'),
    (7, 105, 4, 19.99, '2023-01-20 10:45:00'),
    (8, 103, 2, 9.99, '2023-01-20 15:30:00'),
    (9, 101, 1, 15.99, '2023-01-21 11:20:00'),
    (10, 104, 1, 49.99, '2023-01-22 13:40:00'),
    (11, 106, 3, 24.99, '2023-01-23 10:15:00'),
    (12, 102, 2, 29.99, '2023-01-24 14:50:00'),
    (13, 105, 1, 19.99, '2023-01-25 09:30:00'),
    (14, 101, 4, 15.99, '2023-01-26 16:20:00'),
    (15, 103, 3, 9.99, '2023-01-27 12:45:00');


INSERT INTO sales (id, product_id, quantity, price, sale_date) VALUES
    (16, 107, 2, 39.99, '2023-02-01 10:25:00'),
    (17, 108, 1, 89.99, '2023-02-02 14:30:00'),
    (18, 109, 3, 12.49, '2023-02-03 11:15:00'),
    (19, 110, 2, 19.99, '2023-02-04 16:40:00'),
    (20, 101, 1, 15.99, '2023-02-05 09:20:00'),
    (21, 102, 4, 29.99, '2023-02-06 13:10:00'),
    (22, 103, 2, 9.99, '2023-02-07 10:45:00'),
    (23, 104, 1, 49.99, '2023-02-08 15:30:00'),
    (24, 105, 3, 19.99, '2023-02-09 12:20:00'),
    (25, 106, 2, 24.99, '2023-02-10 14:15:00'),
    (26, 107, 1, 39.99, '2023-02-11 11:30:00'),
    (27, 108, 2, 89.99, '2023-02-12 16:45:00'),
    (28, 109, 4, 12.49, '2023-02-13 10:10:00'),
    (29, 110, 1, 19.99, '2023-02-14 13:25:00'),
    (30, 101, 2, 15.99, '2023-02-15 09:40:00'),
    (31, 102, 1, 29.99, '2023-03-01 14:20:00'),
    (32, 103, 3, 9.99, '2023-03-02 11:35:00'),
    (33, 104, 2, 49.99, '2023-03-03 16:50:00'),
    (34, 105, 1, 19.99, '2023-03-04 10:05:00'),
    (35, 106, 2, 24.99, '2023-03-05 13:15:00'),
    (36, 107, 3, 39.99, '2023-03-06 15:25:00'),
    (37, 108, 1, 89.99, '2023-03-07 09:30:00'),
    (38, 109, 2, 12.49, '2023-03-08 12:40:00'),
    (39, 110, 4, 19.99, '2023-03-09 14:55:00'),
    (40, 101, 1, 15.99, '2023-03-10 11:10:00'),
    (41, 102, 2, 29.99, '2023-04-11 16:20:00'),
    (42, 103, 1, 9.99, '2023-04-12 10:35:00'),
    (43, 104, 3, 49.99, '2023-04-13 13:45:00'),
    (44, 105, 2, 19.99, '2023-04-14 15:50:00'),
    (45, 106, 1, 24.99, '2023-04-15 09:05:00'),
    (46, 107, 2, 39.99, '2023-05-16 12:15:00'),
    (47, 108, 1, 89.99, '2023-05-17 14:25:00'),
    (48, 109, 3, 12.49, '2023-05-18 16:35:00'),
    (49, 110, 2, 19.99, '2023-05-19 10:45:00'),
    (50, 101, 4, 15.99, '2023-05-20 13:55:00'),
    (51, 102, 1, 27.99, '2023-01-15 10:00:00'),
    (52, 102, 2, 25.99, '2023-06-10 11:00:00'),
    (53, 103, 5, 8.99, '2023-07-05 09:30:00'),
    (54, 104, 1, 45.00, '2023-08-12 14:20:00'),
    (55, 105, 3, 17.50, '2023-09-18 16:10:00');

INSERT INTO sales (id, product_id, quantity, price, sale_date) VALUES
    (56, 101, 2, 16.50, '2023-10-01 09:15:00'),
    (57, 102, 1, 30.50, '2023-10-02 10:30:00'),
    (58, 103, 3, 10.25, '2023-10-03 11:45:00'),
    (59, 104, 1, 50.00, '2023-10-04 12:00:00'),
    (60, 105, 2, 20.75, '2023-10-05 13:20:00'),
    (61, 106, 1, 25.99, '2023-10-06 14:35:00'),
    (62, 107, 3, 40.25, '2023-10-07 15:50:00'),
    (63, 108, 2, 90.00, '2023-10-08 16:05:00'),
    (64, 109, 1, 13.00, '2023-10-09 09:30:00'),
    (65, 110, 4, 20.50, '2023-10-10 10:45:00'),
    (66, 101, 1, 16.50, '2023-10-11 11:00:00'),
    (67, 102, 2, 30.50, '2023-10-12 12:15:00'),
    (68, 103, 1, 10.25, '2023-10-13 13:30:00'),
    (69, 104, 3, 50.00, '2023-10-14 14:45:00'),
    (70, 105, 2, 20.75, '2023-10-15 15:00:00'),
    (71, 106, 1, 25.99, '2023-10-16 16:15:00'),
    (72, 107, 2, 40.25, '2023-10-17 09:20:00'),
    (73, 108, 1, 90.00, '2023-10-18 10:35:00'),
    (74, 109, 3, 13.00, '2023-10-19 11:50:00'),
    (75, 110, 2, 20.50, '2023-10-20 12:05:00'),
    (76, 101, 1, 16.50, '2023-10-21 13:20:00'),
    (77, 102, 4, 30.50, '2023-10-22 14:35:00'),
    (78, 103, 2, 10.25, '2023-10-23 15:50:00'),
    (79, 104, 1, 50.00, '2023-10-24 16:05:00'),
    (80, 105, 3, 20.75, '2023-10-25 09:10:00'),
    (81, 106, 2, 25.99, '2023-10-26 10:25:00'),
    (82, 107, 1, 40.25, '2023-10-27 11:40:00'),
    (83, 108, 2, 90.00, '2023-10-28 12:55:00'),
    (84, 109, 1, 13.00, '2023-10-29 13:10:00'),
    (85, 110, 3, 20.50, '2023-10-30 14:25:00'),
    (86, 101, 2, 16.50, '2023-11-01 15:40:00'),
    (87, 102, 1, 30.50, '2023-11-02 16:55:00'),
    (88, 103, 4, 10.25, '2023-11-03 09:05:00'),
    (89, 104, 2, 50.00, '2023-11-04 10:20:00'),
    (90, 105, 1, 20.75, '2023-11-05 11:35:00'),
    (91, 106, 3, 25.99, '2023-11-06 12:50:00'),
    (92, 107, 2, 40.25, '2023-11-07 13:05:00'),
    (93, 108, 1, 90.00, '2023-11-08 14:20:00'),
    (94, 109, 2, 13.00, '2023-11-09 15:35:00'),
    (95, 110, 1, 20.50, '2023-11-10 16:50:00'),
    (96, 101, 3, 16.50, '2023-11-11 09:15:00'),
    (97, 102, 2, 30.50, '2023-11-12 10:30:00'),
    (98, 103, 1, 10.25, '2023-11-13 11:45:00'),
    (99, 104, 4, 50.00, '2023-11-14 12:00:00'),
    (100, 105, 2, 20.75, '2023-11-15 13:15:00');

SELECT
    product_id,
    sum(quantity) AS total_quantity,
    round(sum(quantity * price), 2) AS
total_revenue,
    count() AS total_sales
FROM
    sales
GROUP BY
    product_id
ORDER BY
    product_id ASC;